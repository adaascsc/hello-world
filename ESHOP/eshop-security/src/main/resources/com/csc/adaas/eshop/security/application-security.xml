<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:beans="http://www.springframework.org/schema/beans" 
	xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:jdbc="http://www.springframework.org/schema/jdbc"
	xmlns:sec="http://www.springframework.org/schema/security"
	xmlns:util="http://www.springframework.org/schema/util"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
						http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
						http://www.springframework.org/schema/tx 
						http://www.springframework.org/schema/tx/spring-tx-3.0.xsd
						http://www.springframework.org/schema/context 
        				http://www.springframework.org/schema/context/spring-context-3.0.xsd
						http://www.springframework.org/schema/aop 
						http://www.springframework.org/schema/aop/spring-aop-3.0.xsd
						http://www.springframework.org/schema/jdbc 
						http://www.springframework.org/schema/jdbc/spring-jdbc-3.0.xsd
						http://www.springframework.org/schema/security
						http://www.springframework.org/schema/security/spring-security-3.0.3.xsd
						http://www.springframework.org/schema/util 
						http://www.springframework.org/schema/util/spring-util.xsd">
	
	<context:component-scan base-package="com.csc.adaas.eshop.security.*"/>
	
	<bean id="springSecurityFilterChain" class="org.springframework.security.web.FilterChainProxy">
		<sec:filter-chain-map path-type="ant">
		 <sec:filter-chain pattern="/register*.htm" filters="none"/>
				<sec:filter-chain pattern="/**" 
			filters="securityContextPersistenceFilter,
					authenticationFilter,
					anonymousAuthFilter,
					exceptionTranslationFilter,
					logoutFilter,
					securityContextHolderAwareRequestFilter,
					filterSecurityInterceptor" />
					<sec:filter-chain pattern="/register*.htm" filters="none"/>
		</sec:filter-chain-map>
	</bean>
	
	<bean id="securityContextPersistenceFilter" 
			class="org.springframework.security.web.context.SecurityContextPersistenceFilter">
		<property name="forceEagerSessionCreation" value="true" />
	</bean>
	
	 <bean id="securityContextHolderAwareRequestFilter" 
	 	class="org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter"/>
	
	<bean id="authenticationFilter" class="org.springframework.security.web.authentication.UsernamePasswordAuthenticationFilter">
  		<property name="authenticationManager" ref="authenticationManager"/>
  		<property name="filterProcessesUrl" value="/j_spring_security_check"/>
  		<property name="authenticationFailureHandler" ref="authenticationFailureHandler"/>
		<property name="authenticationSuccessHandler" ref="authenticationSuccessHandler"/>
		
	</bean>
	
	<bean id="anonymousAuthFilter" class="org.springframework.security.web.authentication.AnonymousAuthenticationFilter">
		<property name="key" value="eshop"/>
		<property name="userAttribute" value="anonymousUser,ROLE_ANONYMOUS"/>
	</bean>
	
	<bean id="exceptionTranslationFilter" class="org.springframework.security.web.access.ExceptionTranslationFilter">
		<property name="authenticationEntryPoint" ref="loginUrlAuthenticationEntryPoint"/>
		<property name="accessDeniedHandler" ref="accessDeniedHandler"/>
	</bean>
	
	<bean id="filterSecurityInterceptor" class="org.springframework.security.web.access.intercept.FilterSecurityInterceptor">
		<property name="authenticationManager" ref="authenticationManager"/>
		<property name="accessDecisionManager" ref="accessDecisionManager"/>
		<property name="securityMetadataSource">
			<sec:filter-security-metadata-source>
				<sec:intercept-url pattern="/css/**" access="ROLE_ANONYMOUS,GUEST,USER,POWER USER,ADMINISTRATOR" />
				<sec:intercept-url pattern="/js/**" access="ROLE_ANONYMOUS,GUEST,USER,POWER USER,ADMINISTRATOR"/>
				<sec:intercept-url pattern="/images/**" access="ROLE_ANONYMOUS,GUEST,USER,POWER USER,ADMINISTRATOR"/>
				<sec:intercept-url pattern="/login.htm" access="ROLE_ANONYMOUS,GUEST,USER,POWER USER,ADMINISTRATOR"/>
				<sec:intercept-url pattern="/registerUser.htm" access="ROLE_ANONYMOUS,GUEST,USER,POWER USER,ADMINISTRATOR"/>
				<sec:intercept-url pattern="/registerMobileUser.htm" access="ROLE_ANONYMOUS,GUEST,USER,POWER USER,ADMINISTRATOR"/>
				<sec:intercept-url pattern="/registerNewUser.htm" access="ROLE_ANONYMOUS,GUEST,USER,POWER USER,ADMINISTRATOR"/>
				<sec:intercept-url pattern="/loginFailure.htm*" access="ROLE_ANONYMOUS,GUEST,USER,POWER USER,ADMINISTRATOR"/>
				<sec:intercept-url pattern="/logout.htm" access="ROLE_ANONYMOUS,GUEST,USER,POWER USER,ADMINISTRATOR"/>
				<sec:intercept-url pattern="/accessDenied.htm" access="ROLE_ANONYMOUS,GUEST,USER,POWER USER,ADMINISTRATOR"/>
				<sec:intercept-url pattern="/**" access="GUEST,USER,POWER USER,ADMINISTRATOR"/>
				<sec:intercept-url pattern="/customer_mobile.htm" access="ROLE_ANONYMOUS,GUEST,USER,POWER USER,ADMINISTRATOR"/>
			</sec:filter-security-metadata-source>
		</property>
	</bean>
	
	<bean id="logoutFilter" class="org.springframework.security.web.authentication.logout.LogoutFilter">
       	<!-- URL redirected to after logout success -->
        <constructor-arg value="/logout.htm"/>
        <constructor-arg>
            <list>
                <bean class="org.springframework.security.web.authentication.logout.SecurityContextLogoutHandler">
                    <property name="invalidateHttpSession" value="true"/>
                </bean>
            </list>
        </constructor-arg>
    </bean>
    
    <!-- 	
    	*********************************************************
    	Filter chaining ends 
    	Supporting bean injections starting...
    	********************************************************* 
    -->
	
	<bean id="loginUrlAuthenticationEntryPoint" 
			class="org.springframework.security.web.authentication.LoginUrlAuthenticationEntryPoint">
  		<property name="loginFormUrl" value="/login.htm"/>
	</bean> 
	 
	<bean id="authenticationFailureHandler" 
			class="org.springframework.security.web.authentication.ExceptionMappingAuthenticationFailureHandler">
		<property name="exceptionMappings">
			<props>
				<prop key="org.springframework.security.authentication.BadCredentialsException">
				/loginFailure.htm?msg=BadCredentials</prop>
				<prop key="com.csc.adaas.eshop.security.exception.TenantDormantException">
				/loginFailure.htm?msg=TenantDormant</prop>
				<prop key="com.csc.adaas.eshop.security.exception.UserNotActivatedException">
				/loginFailure.htm?msg=UsrNotActive</prop>
				<prop key="org.springframework.security.core.userdetails.UsernameNotFoundException">
				/loginFailure.htm?msg=UsrNotFound</prop>
				<prop key="org.springframework.security.core.userdetails.TenantAndUserDomainMismatchException">
				/loginFailure.htm?msg=UsrAndTenantDomainMismatch</prop>
				<prop key="org.springframework.security.authentication.LockedException">
				/loginFailure.htm?msg=lockedException</prop>
				<prop key="org.springframework.security.authentication.CredentialsExpiredException">
				/loginFailure.htm?msg=credentialExpired</prop>
			</props>
		</property>
		<property name="defaultFailureUrl" value="/loginFailure.htm?msg=default" />
	</bean>
	
	<bean id="authenticationSuccessHandler" 
			class="org.springframework.security.web.authentication.SavedRequestAwareAuthenticationSuccessHandler">
		<property name="defaultTargetUrl" value="/home.htm" />
	</bean>
	
	
	<bean id="authenticationManager" class="org.springframework.security.authentication.ProviderManager">
		<property name="eraseCredentialsAfterAuthentication" value="true"/>
		<property name="providers">
			<list>
				<ref bean="daoAuthenticationProvider"/>
				<ref bean="anonymousAuthenticationProvider"/>
			</list>
		</property>
	</bean>
	
	<bean id="daoAuthenticationProvider" class="org.springframework.security.authentication.dao.DaoAuthenticationProvider">
		<property name="userDetailsService" ref="customUserDetailsService"/>
		  <property name="passwordEncoder" ref="passwordEncoder"/>
			<property name="saltSource" ref="saltSource"/> 
			
		<property name="preAuthenticationChecks" ref="eshopPreAuthenticationChecks"/>
		<property name="postAuthenticationChecks" ref="eshopPostAuthenticationChecks"/>
	</bean>
	
	<bean id="passwordEncoder" class="org.springframework.security.authentication.encoding.ShaPasswordEncoder">
		<!-- <constructor-arg index="0" value="256"/>  -->
	</bean>
	
	<bean id="saltSource" class="org.springframework.security.authentication.dao.ReflectionSaltSource">
		<property name="userPropertyToUse" value="username" />
    </bean> 
	
		
	<bean id="anonymousAuthenticationProvider" class="org.springframework.security.authentication.AnonymousAuthenticationProvider">
		<property name="key" value="eshop"/>
	</bean>
	
	<bean id="accessDeniedHandler" class="org.springframework.security.web.access.AccessDeniedHandlerImpl">
		<property name="errorPage" value="/accessDenied.htm"/>
	</bean>
	
	<!-- supporting class for filterInvocationInterceptor -->
    <bean id="accessDecisionManager" class="org.springframework.security.access.vote.AffirmativeBased">
        <property name="allowIfAllAbstainDecisions" value="false"/>
        <property name="decisionVoters">
            <list>
                <ref bean="roleVoter"/>
            </list>
        </property>
    </bean>
 
    <bean id="roleVoter" class="com.csc.adaas.eshop.security.core.CustomRoleVoter">
        <property name="rolePrefix" value=""/>
    </bean>
    
   
     <bean id="securityDataSource" class="org.apache.commons.dbcp.BasicDataSource">
    	<property name="driverClassName" value="com.mysql.jdbc.Driver" />
    	<property name="url" value="jdbc:mysql://localhost:3306/eshop" />
    	<property name="username" value="adaasuser" />
    	<property name="password" value="adaas" />
    	<property name="initialSize" value="75" />
    	<property name="maxActive" value="100" />
    	<property name="maxIdle" value="1" />
    	<property name="minIdle" value="8" />
    	<property name="maxWait" value="15000" />
  	</bean>
  	
  	<!-- a PlatformTransactionManager is still required-->
	<bean id="secTxManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="securityDataSource"/>
	</bean>
    
	
	
</beans>